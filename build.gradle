plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'me.botsko'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly files('libs/worldedit-bukkit-6.1.jar')
    compileOnly files('libs/HeroChat.jar')
    compileOnly files('libs/spigot-1.8.jar')
    compileOnly files('libs/mariadb-java-client-3.3.3.jar')

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.apache.tomcat:tomcat-jdbc:9.0.80'
    implementation 'org.apache.tomcat:tomcat-juli:9.0.80'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 8 || JavaVersion.current().isJava8Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    dependencies {
        include dependency('org.apache.tomcat:tomcat-jdbc')
        include dependency('org.apache.tomcat:tomcat-juli')
        include dependency("org.mariadb.jdbc:mariadb-java-client:3.3.3")
        include dependency('com.google.code.gson:gson')
    }
    relocate 'org.apache.tomcat.jdbc.pool', 'me.botsko.prism.libs.tomcat.jdbc.pool'
    relocate 'org.apache.juli.logging', 'me.botsko.prism.libs.juli.logging'
    relocate 'org.mariadb.jdbc', 'me.botsko.prism.libs.mariadb.jdbc'
    relocate 'com.google.gson', 'me.botsko.prism.libs.gson'

    archiveClassifier.set('')
}

build.dependsOn shadowJar
jar.enabled = false
